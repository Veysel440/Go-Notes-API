apiVersion: apps/v1
kind: Deployment
metadata:
  name: notes-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notes-api
  template:
    metadata:
      labels:
        app: notes-api
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
      containers:
        - name: api
          image: ghcr.io/veysel440/go-notes-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - { name: APP_ENV,  value: "prod" }
            - { name: APP_PORT, value: "8080" }
            - { name: APP_READ_TIMEOUT,  value: "5s" }
            - { name: APP_WRITE_TIMEOUT, value: "10s" }

            # DB
            - name: DB_CONNECTION
              value: mysql
            - name: DB_HOST
              valueFrom: { secretKeyRef: { name: mysql-conn, key: host } }
            - name: DB_PORT
              valueFrom: { secretKeyRef: { name: mysql-conn, key: port } }
            - name: DB_DATABASE
              valueFrom: { secretKeyRef: { name: mysql-conn, key: database } }
            - name: DB_USERNAME
              valueFrom: { secretKeyRef: { name: mysql-conn, key: username } }
            - name: DB_PASSWORD
              valueFrom: { secretKeyRef: { name: mysql-conn, key: password } }
            - name: DB_TIMEOUT
              value: "3s"

            - name: DB_DSN
              valueFrom: { secretKeyRef: { name: mysql-dsn, key: dsn } }

            # JWT key rotation (KID)
            - name: JWT_KEYS
              valueFrom: { secretKeyRef: { name: jwt-keys, key: keys } } # "kid1:secret1,kid2:secret2"
            - { name: JWT_CURRENT_KID, value: "key1" }
            - { name: JWT_ISSUER,      value: "go-notes-api" }
            - { name: JWT_AUDIENCE,    value: "notes-api" }

            # Rate-limit, CORS, metrics
            - { name: RATE_RPS,       value: "10" }
            - { name: RATE_BURST,     value: "10" }
            - { name: RATE_AUTH_RPS,  value: "2" }
            - { name: RATE_AUTH_BURST,value: "5" }
            - { name: CORS_ORIGINS,   value: "http://localhost:5173,http://localhost:3000" }
            - { name: METRICS_ALLOW,  value: "10.0.0.0/8" }

            # Redis
            - name: REDIS_ADDR
              valueFrom: { configMapKeyRef: { name: notes-config, key: REDIS_ADDR } }

            # OTEL
            - { name: OTEL_ENDPOINT, value: "http://otel-collector:4318" }
            - { name: OTEL_SAMPLER,  value: "0.2" }

            - { name: MAX_BODY_BYTES, value: "1048576" }
            - { name: BCRYPT_COST,    value: "12" }
            - { name: JTI_PREFIX,     value: "jti:" }

          readinessProbe:
            httpGet: { path: /readyz, port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /healthz, port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 10

          resources:
            requests: { cpu: "100m", memory: "128Mi" }
            limits:   { cpu: "500m", memory: "256Mi" }

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]

      terminationGracePeriodSeconds: 20
