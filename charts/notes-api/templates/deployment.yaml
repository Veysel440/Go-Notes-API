apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "notes.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: { app: {{ include "notes.fullname" . }} }
  template:
    metadata:
      labels: { app: {{ include "notes.fullname" . }} }
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports: [{ containerPort: {{ .Values.service.targetPort }} }]
          envFrom:
            - configMapRef: { name: {{ include "notes.fullname" . }}-config }
          {{- if .Values.secrets.enabled }}
            - secretRef:    { name: {{ .Values.secrets.name }} }
          {{- end }}
          readinessProbe:
            httpGet: { path: /readyz, port: {{ .Values.service.targetPort }} }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /healthz, port: {{ .Values.service.targetPort }} }
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
{{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: ["ALL"] }
